------------------------------------------------------------------------------------
--count of all the records from the Raven provider table, which has the NPI info we need to examine
select count(distinct claim_number) from claims_submits_provider;--5,484,808,473 distinct claim numbers

describe table claims_submits_provider;
select * from claims_submits_provider limit 100;

---------------------------------------------------------------------------------------------
--this section is for facility to health system mastering
--creating columnns for different NPI's associated with each claim number
CREATE OR REPLACE TABLE claims_submits_provider_NPI_type as
select distinct(claim_number) as claim_number, 

--creating column for Facility NPI
case when Data_Source = 'CONDOR' and Provider_NPI is not null and Provider_Type = 'Facility' then Provider_NPI
when Data_Source = 'ALBATROSS' and Provider_NPI is not null and (Provider_Type = 'ServiceFacility' or Provider_Type = 'Facility') then max(Provider_NPI)
when Data_Source = 'VULTURE' and Provider_NPI is not null and Provider_Type = 'ServiceLocation' then Provider_NPI
end as Facility_NPI,

--creating column for Rendering NPI
case when Data_Source = 'CONDOR' and Provider_NPI is not null and Provider_Type = 'Attending' then Provider_NPI
when Data_Source = 'ALBATROSS' and Provider_NPI is not null and Provider_Type = 'Rendering'  then Provider_NPI
when Data_Source = 'VULTURE' and Provider_NPI is not null and Provider_Type = 'Rendering' then Provider_NPI
end as Rendering_NPI,

--creating column for Billing NPI
case when Data_Source = 'CONDOR' and Provider_NPI is not null and Provider_Type = 'Billing' then Provider_NPI
when Data_Source = 'ALBATROSS' and Provider_NPI is not null and Provider_Type = 'Billing'  then Provider_NPI
when Data_Source = 'VULTURE' and Provider_NPI is not null and Provider_Type = 'Billing' then Provider_NPI
end) as Billing_NPI,

--creating column for Referring
case when Data_Source = 'CONDOR' and Provider_NPI is not null and Provider_Type = 'Referring' then Provider_NPI
when Data_Source = 'ALBATROSS' and Provider_NPI is not null and (Provider_Type = 'ServiceFacility' or Provider_Type = 'Facility') then max(Provider_NPI)
when Data_Source = 'VULTURE' and Provider_NPI is not null and Provider_Type = 'ServiceLocation' then Provider_NPI
end as Referring_NPI


from claims_submits_provider
group by claim_number;


--checking above
select count(*) from claims_submits_provider_npi_type;--18,225,503,184

--joining in field to indicate whether the rendering npi is an organization
--the rendering organization column is for npi and only non-null when the rendering is an organization
CREATE OR REPLACE TABLE claims_submits_rendering_organization as 

select 
prov.claim_number, 
prov.facility_npi, 
prov.rendering_npi, 
prov.billing_npi, 
prov.referring_npi, 
cms.npi as rendering_organization

from claims_submits_provider_NPI_type prov

left join (select * from srn_cmsnpi_latest where entity_type_code = '2' and npi is not null) cms
            
on prov.rendering_npi = cms.npi;            

--checking above
select count(distinct claim_number) from claims_submits_rendering_organization limit 100;
select count(*) from claims_submits_rendering_organization;

describe table srn_cmsnpi_latest;

select count(*) from claims_submits_provider;

/*for each claim number, assigning a facility, billing, referring, rendering npi, npi for when rendering is an organization
since we are using max this will ensure that nulls are not a problem, each claim number has one row*/

CREATE OR REPLACE TABLE claims_submits_provider_npi_type2 as

select distinct(claim_number), 

max(case when facility_Npi is not null and facility_npi <> '' and facility_npi <> 'NULL' and length(trim(facility_npi)) = 10 
    and facility_npi <> '0000000000' and try_to_number(facility_npi) is not null and facility_npi not like '.%' and facility_npi not like 'e%' 
   then facility_npi else NULL end) 
as facility_npi,

max(case when billing_npi is not null and billing_npi <> '' and billing_npi <> 'NULL' and length(trim(billing_npi)) = 10 
    and billing_npi <> '0000000000' and try_to_number(billing_npi) is not null and billing_npi not like '.%' and billing_npi not like 'e%' 
   then billing_npi else NULL end) as billing_npi,
   
max(case when referring_npi is not null and referring_npi <> '' and referring_npi <> 'NULL' and length(trim(referring_npi)) = 10 
    and referring_npi <> '0000000000' and try_to_number(referring_npi) is not null and referring_npi not like '.%' and referring_npi not like 'e%' 
   then referring_npi else NULL end)  as referring_npi,
   
max(case when rendering_npi is not null and rendering_npi <> '' and rendering_npi <> 'NULL' and length(trim(rendering_npi)) = 10 
    and rendering_npi <> '0000000000' and try_to_number(rendering_npi) is not null and rendering_npi not like '.%' and rendering_npi not like 'e%' 
   then rendering_npi else NULL end) as rendering_npi,
   
   
max(case when rendering_organization is not null and rendering_organization <> '' and rendering_organization <> 'NULL' and length(trim(rendering_organization)) = 10 
    and rendering_organization <> '0000000000' and try_to_number(rendering_organization) is not null and rendering_organization not like '.%' and rendering_organization not like 'e%' 
   then rendering_organization else NULL end) as rendering_organization

from claims_submits_rendering_organization

group by claim_number;

grant all on claims_submits_provider_npi_type2 to rwd_sandbox;

select count(distinct claim_number) from claims_submits_provider_npi_type2;
select * from claims_submits_provider_npi_type2 limit 10;
/*This was for the excel I generated*/
select * from claims_submits_provider_npi_type2 limit 100;
            
        --getting all the different counts, not making a table, this was for a separate excel request not related to final table
      select 
      --we have facility
      count(distinct case when facility_npi is not null and facility_npi <> '' 
                   then claim_number else null end) as facility_npi_count,
      --no facility, have rendering 
      count(distinct case when (facility_npi is null or facility_npi = '')
                         and (rendering_npi is not null and rendering_npi <> '') 
                         then claim_number else null end) as rendering_npi_count,
      --no facility, no rendering, have referring                 
      count(distinct case when (facility_npi is null or facility_npi = '')
                         and (rendering_npi is null or rendering_npi = '') 
                         and (referring_npi is not null and referring_npi <> '')
                         then claim_number else null end) as referring_npi_count,
      --no facility, no rendering, no referring, have billing
      count(distinct case when (facility_npi is null or facility_npi = '')
                         and (rendering_npi is null or rendering_npi = '') 
                         and (referring_npi is null or referring_npi = '')
                         and (billing_npi is not null and billing_npi <> '')
                         then claim_number else null end) as billing_npi_count,
      --no facility, rendering is an organization                   
      count(distinct case when (facility_npi is null or facility_npi = '')
                         and (rendering_organization is not null and rendering_organization <> '') 
                         then claim_number else null end) as rendering_organization_count                 
                         
                         
from claims_submits_provider_npi_type2;
            
            describe table claims_submits_provider_npi_type2;
            
            select * from sandbox.healthbase_map_to_top_health_system limit 100;
            select count(*) from sandbox.healthbase_map_to_top_health_system;
            select count(*) from entities_for_hs7;
            select * from entities_for_hs7 limit 100;
            
---------------------------------------------------------------------------------------            
--adding in the facility npi when it is an org, don't really care about other columns for this part
--doing an inner join because we only want instances where the facility is an organization
CREATE OR REPLACE TABLE claims_submits_provider_npi_type3 as

select two.*, facility_npi as facility_organization_npi

from claims_submits_provider_npi_type2 two

inner join (select * from srn_cmsnpi_latest where entity_type_code = '2') cms

on two.facility_npi = cms.npi;

--checking above
select count(*) from claims_submits_provider_npi_type3;
select * from claims_submits_provider_npi_type3 limit 100;
            
select * from rwd.healthbase_healthsystem limit 100;
      
select *
from ml_claims_submits_facility_master_dup_2
order by claim_number, source_npi_type;       
      
--adding in health system name when we have it based on Facility being an organization

CREATE OR REPLACE TABLE claims_submits_provider_npi_type4 as

select 
three.claim_number, 
three.Facility_organization_npi as Source_NPI, 
'Facility' as source_npi_code_type, 
'2' as Source_NPI_type, 
three.Facility_organization_npi as organization_npi, 
syst.label as Organization_Type, 
syst.ID as System_ID, 
syst.Healthsystem_Name,
syst.healthbase_id

from claims_submits_provider_npi_type3 three

left join sandbox.healthbase_map_to_top_health_system syst

on three.facility_organization_npi = syst.identifier;

--checking above
select * from claims_submits_provider_npi_type4 limit 1000;
      
--checking above
select count(*) from claims_submits_provider_npi_type4 limit 100;--1,000,798,312
      
--adding in healthsystemname when we have it based on rendering being an organization, which was a column created in a previous step

CREATE OR REPLACE TABLE claims_submits_provider_npi_type5 as

select 
three.claim_number, 
three.rendering_organization as Source_NPI, 
'Rendering' as source_npi_code_type, 
'2' as Source_NPI_type, 
three.Rendering_Organization as organization_npi, 
syst.label as Organization_Type, 
syst.ID as System_ID, 
syst.Healthsystem_Name,
syst.healthbase_id

from (select * from claims_submits_provider_npi_type2 where facility_npi is null and rendering_organization is not null) three

left join sandbox.healthbase_map_to_top_health_system syst

on three.rendering_organization = syst.identifier;

--------------------------------------------------------------------------
--pulling out only instances where the billing npi is an organization
CREATE OR REPLACE TABLE claims_submits_provider_billing_intermediate as

select two.*, billing_npi as facility_organization_npi

from claims_submits_provider_npi_type2 two

inner join (select * from srn_cmsnpi_latest where entity_type_code = '2') cms

on two.billing_npi = cms.npi;

select count(*) from claims_submits_provider_billing_intermediate limit 100;

select count(*) from claims_submits_provider_billing_intermediate limit 100;
--adding in healthsystemname when we have it based on billing being an organization

--joining in health system info for billing npi's, when they are an organization
CREATE OR REPLACE TABLE claims_submits_provider_npi_typebilling as

select 
three.claim_number, 
three.billing_npi as Source_NPI, 
'Billing' as source_npi_code_type, 
'2' as Source_NPI_type, 
three.billing_npi as organization_npi, 
syst.label as Organization_Type, 
syst.ID as System_ID, 
syst.Healthsystem_Name,
syst.healthbase_id

from (select * from claims_submits_provider_billing_intermediate where facility_npi is null and rendering_npi is null and referring_npi is null
     and billing_npi is not null) three

left join sandbox.healthbase_map_to_top_health_system syst

on three.billing_npi = syst.identifier;

select count(*) from claims_submits_provider_npi_typebilling;

not like 'A%'

-----------------------------------------------------------------------------
--intermediate step based on referring being an organization, doing inner join because we only want referrings that are organization
CREATE OR REPLACE TABLE claims_submits_provider_referring_intermediate as

select two.*, referring_npi as facility_organization_npi

from claims_submits_provider_npi_type2 two

inner join (select * from srn_cmsnpi_latest where entity_type_code = '2') cms

on two.referring_npi = cms.npi;


--adding in healthsystem when we have it based on referring being an organization
CREATE OR REPLACE TABLE claims_submits_provider_npi_typereferring as

select 
three.claim_number, 
three.referring_npi as Source_NPI, 
'Referring' as source_npi_code_type, 
'2' as Source_NPI_type, 
three.referring_npi as organization_npi, 
syst.label as Organization_Type, 
syst.ID as System_ID, 
syst.Healthsystem_Name,
syst.healthbase_id

from (select * from claims_submits_provider_referring_intermediate where facility_npi is null and rendering_npi is null and referring_npi is not null) three

left join sandbox.healthbase_map_to_top_health_system syst

on three.referring_npi = syst.identifier;




--unioning the tables together, where they are organizations
CREATE OR REPLACE TABLE claims_submits_provider_npi_type6 as

select * 

from claims_submits_provider_npi_type4

UNION

select *

from claims_submits_provider_npi_type5

UNION

select *

from claims_submits_provider_npi_typereferring

UNION

select *

from CLAIMS_SUBMITS_PROVIDER_NPI_TYPEBILLING;

--adding in the hospital name info stuff
CREATE OR REPLACE TABLE claims_submits_provider_npi_type_7 as

select six.*, 
hosp.pos_other_fac_name as facility_name,
hosp.pos_other_st_adr as facility_address,
hosp.pos_other_city_name as facility_city,
hosp.pos_other_state_cd as facility_state,
hosp.pos_other_zip_cd as facility_zip

from claims_submits_provider_npi_type6 six

left join rwd.healthbase_hospital hosp

on six.healthbase_id = hosp.healthbase_id;


select count(*) from claims_submits_provider_npi_type6;

--limiting to only instances where we have an NPI, precautionary and maybe unneeded step
CREATE OR REPLACE TABLE claims_submits_provider_npi_type_8 as
select * from claims_submits_provider_npi_type_7 where source_npi is not null;



grant all on claims_submits_provider_npi_type_8 to rwd_sandbox;


select count(distinct claim_number) from claims_submits_provider_npi_type_8;

select * from rwd.healthbase_hospital limit 100;

select * from claims_submits_provider_npi_type_7 order by facility_name asc limit 1000;

select * from claims_submits_provider_npi_type_8 limit 100;

grant all on claims_submits_provider_npi_type_8 to rwd_sandbox;
--checking above
select count(*) from claims_submits_provider_npi_type5;--28,000,493
select * from claims_submits_provider_npi_type5 limit 100;

--
describe table rwd.healthbase_hospital;
grant all on claims_submits_provider_npi_type_8 to rwd_sandbox;


select count(*) from claims_submits_provider_npi_type_8;
select * from claims_submits_provider_npi_type_8 limit 100;
select distinct(source_npi_code_type) from claims_submits_provider_npi_type_8 limit 100;


select * from sandbox.healthbase_map_to_top_health_system limit 100;

select * from rwd.healthbase_entitylookup limit 100;
select * from claims_submits_provider_npi_type_8 limit 100;

--adding in label names from entitylookup table
CREATE OR REPLACE TABLE claims_submits_provider_npi_type_final as

select 

npi.claim_number,
npi.source_npi,
npi.source_npi_code_type,
npi.source_npi_type,
npi.organization_npi,
cast(npi.organization_type as VARCHAR(100)) as organization_type,
npi.system_id,
npi.healthsystem_name,
npi.healthbase_id,
npi.facility_name as organization_name,
npi.facility_address as organization_address,
npi.facility_city as organization_city,
npi.facility_state as organization_state,
npi.facility_zip as organization_zip,
cast(look.label as VARCHAR(100)) as label

from claims_submits_provider_npi_type_8 npi

left join rwd.healthbase_entitylookup look

on npi.Healthbase_id = look.Healthbase_ID; 


/*coalescing the two labels for the facility name, since the fill rate isn't perfect between the two columns and we want to capture
facility name when possible*/
CREATE OR REPLACE TABLE claims_submits_provider_npi_type_facility_mapping as

select 

claim_number,
source_npi,
source_npi_code_type,
source_npi_type,
organization_npi,
coalesce(organization_type,label) as organization_type,
system_id,
healthsystem_name,
healthbase_id,
organization_name,
organization_address,
organization_city,
organization_state,
organization_zip


from claims_submits_provider_npi_type_final;


select count(*) from claims_submits_provider_npi_type_facility_mapping;

drop table if exists condor_pharmacy_mm_claims;
------------------------------------------------------------------------------
--limiting to only distinct records
CREATE OR REPLACE TABLE claims_submits_provider_npi_type_facility_mapping_final as

select distinct
claim_number,
source_npi,
source_npi_code_type,
source_npi_type,
organization_npi,
organization_type,
system_id,
healthsystem_name,
healthbase_id,
organization_name,
organization_address,
organization_city,
organization_state,
organization_zip

from claims_submits_provider_npi_type_facility_mapping;

--checking above
select distinct organization_type from claims_submits_provider_npi_type_facility_mapping_final limit 100;

--grant the table to maddy
grant all on claims_submits_provider_npi_type_facility_mapping_final to rwd_sandbox;


--------------------------------------------------------------------------------------------------------------
--Section below is for physician to facility to health system mastering
							
--make a rendering_npi, facility_npi, count_claims reference table
create or replace table sandbox.ml_claims_submits_rendering as
select *
from sandbox.claims_submits_provider
where provider_type in ('Attending', 'Rendering')
	and provider_npi is not null and provider_npi <> 'NULL';
	

	
create or replace table sandbox.ml_claims_submits_facility_rendering as
select A.claim_number
		, A.provider_npi as facility_npi
		, B.provider_npi as rendering_npi
from sandbox.ml_claims_submits_facility A
		inner join sandbox.ml_claims_submits_rendering B
				on A.claim_number = B.claim_number; --2.6G		

create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count as
select rendering_npi, facility_npi, count(distinct claim_number) as count_claim
from sandbox.ml_claims_submits_facility_rendering
group by rendering_npi, facility_npi;		

--cleansing the rendering NPI's
delete from sandbox.ml_claims_submits_rendering_facility_claim_count
where length(trim(rendering_npi)) <> 10
		or rendering_npi = '0000000000'
		or contains(rendering_npi, '+')
		or contains(rendering_npi, '.')
		or try_to_number(rendering_npi) is null
		or try_to_number(facility_npi) is null;

		
select *
from sandbox.ml_claims_submits_rendering_facility_claim_count
order by rendering_npi, count_claim desc;

--adding in row number, because later we want to limit to only instances where the rendering was associated with a facility > 10 times
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number as
select rendering_npi, facility_npi, count_claim
		, row_number () over(partition by rendering_npi order by count_claim desc) as rnk
from sandbox.ml_claims_submits_rendering_facility_claim_count;	


--filter 1 by all time claim > 10 and find the most common facility associated with this rendering npi
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_1 as
select rendering_npi, facility_npi, count_claim
from sandbox.ml_claims_submits_rendering_facility_claim_count_row_number
where rnk = 1
		and count_claim > 10; --1077261

select *
from ml_claims_submits_rendering_facility_claim_count_row_number_filtered
order by rendering_npi;


--filter 2 by making sure that all faclity_npi is a real organization by cmsnpi standard
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_2 as
select distinct A.*
from sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_1 A
		left join sandbox.srn_cmsnpi_latest B
			   on A.facility_npi = B.npi
where entity_type_code <> '1' or entity_type_code is null; --1031815


--filter 3 by making sure that all faclity_npi is a real organization by healthbase standard
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_3 as
select distinct A.*, B.node_1_label as organization_label
from sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_2 A
		left join sandbox.entities_for_hs6 B
			   on A.facility_npi = B.service_npi
where B.Node_1_label <> 'physician'
		or B.Node_1_label is null; --1031813
		

/*coalescing labels here because there is not a perfect fill rate between health base tables which have label and we want to know
what type of facility something is*/
/*entities_for_hs_6 is an internal table we made*/
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_4 as
select distinct A.rendering_npi
				, A.facility_npi
				, A.count_claim
				, coalesce(A.organization_label, C.node_2_label) as organization_label
from sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_3 A
		left join sandbox.entities_for_hs6 C
				on A.facility_npi = C.organization_npi
where coalesce(A.organization_label, C.node_2_label) <> 'physician'
        or coalesce(A.organization_label, C.node_2_label) is null; --1031813
		
		
/*here we are also looking for a label name that is valid for a facility, since entities_for_hs_6 won't capture all cases*/
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_5 as
select distinct A.rendering_npi
				, A.facility_npi
				, A.count_claim
				, coalesce(A.organization_label, C.label) as organization_label
from sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_4 A
		left join rwd.healthbase_entitylookup C
				on A.facility_npi = C.identifier
where coalesce(A.organization_label, C.label)  <> 'physician'
        or coalesce(A.organization_label, C.label) is null;		
		

		
select count(*)
from ml_claims_submits_rendering_facility_claim_count_row_number_filtered_5 --1029146
where organization_label is null; --27267

--only keep those with an organization label
create or replace table sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_6 as
select distinct A.rendering_npi
				, A.facility_npi
				, A.count_claim
				, organization_label
from sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_5 A
where organization_label is not null;	--1001879

-------------------

--make an OCGN reference table
create or replace table sandbox.ml_ocgn_physicin_facility_mapping_1 as
select distinct npi_num, practice_npi_1
from SANDBOX.STAGING_HDS2 A
		inner join sandbox.SV_OCGN_ALL_NPI_COMPANY_ID_XWALK B
				on A.npi_num = B.npi
		inner join sandbox.STAGING_HDS1 C
				on B.company_id = C.companyid
where practice_npi_1 <> '' and practice_npi_1 is not null; --1324


--grab label from entity lookup table
create or replace table sandbox.ml_ocgn_physicin_facility_mapping_2 as
select distinct npi_num as rendering_npi
				, practice_npi_1 as facility_npi
				, C.label as organization_label
from SANDBOX.ml_ocgn_physicin_facility_mapping_1 A
		left join rwd.healthbase_entitylookup C
				on A.practice_npi_1 = C.identifier
where organization_label <> 'physician'; --remove those without a label as well as physicians
				--1322

	
				
	
				
--------------------------------------------------------------------------------				
--physician facility mastering
--start off to get a physician npi pool, each rows has one claim number
select count(*)
from claims_submits_provider_npi_type2; --5,484,808,473

--first get all potential individuals
--unioning together all types of NPI's
create or replace table sandbox.ml_claims_submits_provider_npi_individual_1 as
select claim_number
		, rendering_npi as source_npi
		, 'Rendering' as source_type
from sandbox.claims_submits_provider_npi_type2
where facility_npi is null and rendering_npi is not null
UNION ALL
select claim_number
		, referring_npi as source_npi
		, 'Referring' as source_type
from sandbox.claims_submits_provider_npi_type2
where facility_npi is null and rendering_npi is null and referring_npi is not null
UNION ALL
select claim_number
		, billing_npi as source_npi
		, 'Billing' as source_type
from sandbox.claims_submits_provider_npi_type2
where facility_npi is null 
		and rendering_npi is null 
		and referring_npi is null
		and billing_npi is not null;

		
		
--check against cmsnpi to make sure the npi is for an individual
create or replace table sandbox.ml_claims_submits_provider_npi_individual_2 as
select distinct claim_number
				, source_npi
				, source_type
				, entity_type_code
from sandbox.ml_claims_submits_provider_npi_individual_1 A
		left join sandbox.srn_cmsnpi_latest B
				on A.source_npi = B.npi
where entity_type_code = '1' or entity_type_code is null;


--check against healthbase to make sure the npi is for an individual
create or replace table sandbox.ml_claims_submits_provider_npi_individual_3 as
select distinct claim_number
				, source_npi
				, source_type
				, entity_type_code
				, case when node_1_label = 'physician' then '1'
                        when node_1_label is null then null --only allow phycisians or nulls
                        else '3' end as node_1_label
from sandbox.ml_claims_submits_provider_npi_individual_2 A
		left join sandbox.entities_for_hs6 B
				on A.source_npi = B.service_npi;


--combine entity_type_code and node_1_label to get description of facility
create or replace table sandbox.ml_claims_submits_provider_npi_individual_4 as
select distinct claim_number
				, source_npi
				, source_type
				, coalesce(entity_type_code, node_1_label) as entity_type_code
from sandbox.ml_claims_submits_provider_npi_individual_3
where coalesce(entity_type_code, node_1_label) = '1' or coalesce(entity_type_code, node_1_label) is null;


select *
from ml_claims_submits_provider_npi_individual_4
limit 100;


--keep a record of those cannot be found in both cmsnpi and healthbase
create or replace table sandbox.ml_claims_submits_provider_npi_individual_ghost as
select *
from sandbox.ml_claims_submits_provider_npi_individual_4
where entity_type_code is null; --7,699,188



--------------------------------------------------------------------------------------------
--now map individual to organization npi
--first use ml_claims_submits_rendering_facility_claim_count_row_number_filtered_6
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_1 as
select distinct claim_number
				, source_npi
				, source_type
				, entity_type_code
				, B.facility_npi
				, B.organization_label
from sandbox.ml_claims_submits_provider_npi_individual_4 A
		left join sandbox.ml_claims_submits_rendering_facility_claim_count_row_number_filtered_5 B
				on A.source_npi = B.rendering_npi;
				

select count(*)
from ml_claims_submits_provider_npi_individual_map_to_organization_1 --2416815616
where organization_label is null; --621655630 -> 579824342/2416815616 = 25.7%

--second use OCGN
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_2 as
select distinct claim_number
				, source_npi
				, source_type
				, entity_type_code
				, coalesce(A.facility_npi, B.facility_npi) as facility_npi
				, case when B.facility_npi is not null 
						then coalesce(A.organization_label, B.organization_label)
						else A.organization_label end as organization_label
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_1 A
		 left join sandbox.ml_ocgn_physicin_facility_mapping_2 B
				on A.source_npi = B.rendering_npi;


select count(*)
from ml_claims_submits_provider_npi_individual_map_to_organization_1 --2416815616
where organization_label is null; --621220579 /2416815616 = 25.7%


--get those that have a valid organization label
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_3 as
select *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_2
where organization_label is not null;

--get those unmapped case, where we can't find an organization label
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_4 as
select *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_2
where organization_label is null; --621220579




--get provider location info for these unmapped cases
--first for condor, condor's attending mapped to rendering 
--and referring mapped to reffereing
--and billing mapped to billing
--but bililng has location info, referring or attending don't!!!
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_condor_1 as
select A.claim_number
		, A.source_npi
		, A.source_type
		, A.entity_type_code
		, A.organization_label
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_4 A
where left(A.claim_number,3) = 'con'; --522,349,806

--get address info from provider table
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_condor_2 as
select A.claim_number
		, A.source_npi
		, A.source_type
		, A.entity_type_code
		, A.organization_label
		, B.provider_npi
		, B.provider_type
		, B.adr_line1
		, B.adr_line2
		, B.adr_city
		, B.adr_state
		, B.adr_zip
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_condor_1 A --
		inner join sandbox.claims_submits_provider B
				on A.claim_number = B.claim_number
				and A.source_npi = B.provider_npi
				and (case when A.source_type = 'Rendering' then 'Attending' 
						else A.source_type end ) = B.provider_type; --522,350,509, more?!
						
--only get those having adr_line1 and adr_city
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_condor_3 as
select distinct *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_condor_2
where adr_line1 is not null and adr_city is not null; --46,304,606


--second for albatross 
--rendering is rendering, but no address info
--referring is referring, but no address info
--billing is biling, but no address info 


--third for vulture
--rendering is reindering
--refering is refering
--billing is billing
--this limits to just the vulture claims
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_vulture_1 as
select A.claim_number
		, A.source_npi
		, A.source_type
		, A.entity_type_code
		, A.organization_label
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_4 A
where left(A.claim_number,3) = 'vul'; --61,225,976


--get address from provider table for unmapped vulture claims
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_vulture_2 as
select A.claim_number
		, A.source_npi
		, A.source_type
		, A.entity_type_code
		, A.organization_label
		, B.provider_npi
		, B.provider_type
		, B.adr_line1
		, B.adr_line2
		, B.adr_city
		, B.adr_state
		, B.adr_zip
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_vulture_1 A --
		inner join sandbox.claims_submits_provider B
				on A.claim_number = B.claim_number
				and A.source_npi = B.provider_npi
				and A.source_type= B.provider_type; --61,225,976

						
--only get those having adr_line1 and adr_city
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_vulture_3 as
select distinct *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_vulture_2
where adr_line1 is not null and adr_city is not null; --60199066


--merge condor and vulture
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_1 as
select *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_condor_3
union all 
select *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_vulture_3; --106,495,672



--for those having address, pull in additional information
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_2 as
select 	A.*
		, B.PROVIDER_FIRST_LINE_BUSINESS_PRACTICE_LOCATION_ADDRESS
		, B.PROVIDER_BUSINESS_PRACTICE_LOCATION_ADDRESS_CITY_NAME
		, C.npi 
		, C.entity_type_code as cms_npi_entity_type_code
		, C.PROVIDER_ORGANIZATION_NAME_LEGAL_BUSINESS_NAME
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_1 A
		left join sandbox.srn_cmsnpi_latest B
				on A.adr_line1 = B.PROVIDER_FIRST_LINE_BUSINESS_PRACTICE_LOCATION_ADDRESS
				and A.adr_city = B.PROVIDER_BUSINESS_PRACTICE_LOCATION_ADDRESS_CITY_NAME
		left join sandbox.srn_cmsnpi_latest C
				on B.PROVIDER_FIRST_LINE_BUSINESS_PRACTICE_LOCATION_ADDRESS = C.PROVIDER_FIRST_LINE_BUSINESS_PRACTICE_LOCATION_ADDRESS
				and B.PROVIDER_BUSINESS_PRACTICE_LOCATION_ADDRESS_CITY_NAME = C.PROVIDER_BUSINESS_PRACTICE_LOCATION_ADDRESS_CITY_NAME
where C.entity_type_code = '2'; --5.6G


--dedupe
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_3 as
select distinct	*
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_2;  --45,776,790





--let see if it happens that one physician maps to two locations
select count(distinct claim_number)
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_3; --11,856,594 --one physician maps to two locations .....


--only leave those with one to one mapping
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_4 as
select A.*
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_3  A
		inner join (
						select claim_number, count(npi)
						from ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_3
						group by claim_number
						having count(npi) = 1
						
					) B
				on A.claim_number = B.claim_number; --6,134,683
				


--add label
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_5 as
select A.*
		, B.identifier
		, B.label
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_4 A
		left join rwd.healthbase_entitylookup B
				on  A.npi = B.identifier;
				

create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_not_in_healthbase as
select *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_5
where identifier is null;


---------------------
--combine unmapped and mapped cases
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_5 as
select claim_number
		, source_npi
		, source_type
		, entity_type_code
		, facility_npi as orgniazation_npi
		, organization_label
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_3
UNION ALL
select claim_number
		, source_npi
		, source_type
		, entity_type_code
		, npi
		, label as organization_label
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_unmapped_in_healthbase;


--get healthsystem info
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_6 as
select distinct  claim_number
				, source_npi
				, source_type
				, entity_type_code
				, orgniazation_npi
				, organization_label
				, syst.ID as System_ID, 
				syst.Healthsystem_Name,
				syst.healthbase_id
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_5 A
		left join sandbox.healthbase_map_to_top_health_system syst
				on A.orgniazation_npi = syst.identifier;


--get hospital info
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_7 as
select distinct  claim_number
				, source_npi
				, source_type
				, entity_type_code
				, orgniazation_npi
				, organization_label
				, System_ID
				, Healthsystem_Name
				, C.healthbase_id
				, POS_OTHER_FAC_NAME as facility_name
				, POS_OTHER_ST_ADR as FACILITY_ADDRESS
				, POS_OTHER_CITY_NAME as FACILITY_CITY
				, POS_OTHER_STATE_CD as FACILITY_STATE
				, POS_OTHER_ZIP_CD as FACILITY_ZIP
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_6 A
		left join rwd.healthbase_entitylookup B
				on A.orgniazation_npi = B.identifier
		left join rwd.healthbase_hospital C
				on B.healthbase_id = C.healthbase_id;		--1798983214		
				
select count(distinct claim_number)
from 	ml_claims_submits_provider_npi_individual_map_to_organization_7;	--1798983214	


--case statement for entity_type_code
create or replace table sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_8 as
select claim_number
				, source_npi
				, source_type
				, case when entity_type_code is null then '1' else entity_type_code end as entity_type_code
				, orgniazation_npi
				, organization_label
				, System_ID
				, Healthsystem_Name
				, healthbase_id
				, facility_name
				, FACILITY_ADDRESS
				, FACILITY_CITY
				, FACILITY_STATE
				, FACILITY_ZIP
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_7;


--union with facility mastering table
create or replace table sandbox.claims_submits_facility_master_union as
select *
from sandbox.claims_submits_provider_npi_type_facility_mapping_final
union all
select *
from sandbox.ml_claims_submits_provider_npi_individual_map_to_organization_8; --4599235347


--detect duplicates with both entity_type_code 1 and 2		
--check dup claim_number in this table				
create or replace table sandbox.ml_claims_submits_facility_master_dup_1 as
select claim_number, count(*) as dup
from sandbox.claims_submits_facility_master_union
group by claim_number
having count(*)> 1
order by count(*);



create or replace table sandbox.ml_claims_submits_facility_master_dup_2 as
select distinct B.*
from sandbox.ml_claims_submits_facility_master_dup_1 A
		inner join sandbox.claims_submits_facility_master_union B
				on A.claim_number = B.claim_number;
				
select *
from ml_claims_submits_facility_master_dup_2
order by claim_number, source_npi_type;

--physician records to be deleted				
create or replace table sandbox.ml_claims_submits_facility_master_dup_3 as
select *
from sandbox.ml_claims_submits_facility_master_dup_2
where source_npi_type = '1'; --616,626

--Final table below!!
--delete records from claims_submits_facility_master_union
create or replace table sandbox.claims_submits_facility_master as
select A.*
from sandbox.claims_submits_facility_master_union A
		left join ml_claims_submits_facility_master_dup_3 B
				on A.claim_number = B.claim_number
				and A.source_npi_type =  B.source_npi_type
where B.claim_number is null; --4,598,618,721
